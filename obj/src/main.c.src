	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -38
	call	__frameset
	ld	de, 120
	or	a, a
	sbc	hl, hl
	ld	iy, 24
	xor	a, a
	ld	(ix - 32), a
	lea	bc, ix - 6
	ld	(ix - 16), bc
	lea	bc, ix - 7
	ld	(ix - 35), bc
	ld	(ix - 28), de
	ld	(ix - 6), de
	ld	(ix - 3), hl
	push	iy
	call	_malloc
	ld	(ix - 10), hl
	pop	hl
	ld	de, 24
	ld	iy, 0
BB0_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jq	z, BB0_2
	lea	bc, iy
	ld	hl, (ix - 10)
	add	hl, bc
	ld	bc, 0
	ld	(hl), bc
	ld	bc, 3
	add	iy, bc
	jq	BB0_1
BB0_2:
	ld	(ix - 7), 0
	ld	hl, -851900
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	e, a
	push	de
	push	hl
	call	_srandom
	pop	hl
	pop	hl
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -520
	call	__sand
	ld.sis	de, 3
	add.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, -917500
	push	hl
	pop	iy
	ld	hl, 1000
	ld	(iy), hl
	xor	a, a
	ld	(iy + 3), a
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	de, 0
	push	de
	pop	iy
	ld	(ix - 31), de
BB0_3:
	push	de
	pop	hl
	ld	bc, 5
	call	__idivu
	call	__imulu
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	(ix - 22), hl
	ld	(ix - 13), de
	ex	de, hl
	ld	bc, 30
	call	__idivu
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 19), iy
	add	iy, bc
	ld	(ix - 25), iy
	call	_step
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB0_12
	ld	hl, (ix - 16)
	push	hl
	ld	hl, (ix - 10)
	push	hl
	call	_intersect
	ld	e, 1
	pop	hl
	pop	hl
	bit	0, a
	jq	nz, BB0_12
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	ld	bc, (ix - 31)
	inc	bc
	ld	(ix - 3), bc
	ld	iy, (ix - 28)
	add	iy, bc
	ld	(ix - 6), iy
	bit	0, (ix - 32)
	ld	(ix - 28), iy
	ld	(ix - 38), hl
	jq	nz, BB0_6
	ld	a, l
	xor	a, e
	bit	0, a
	ld	hl, (ix - 10)
	jq	nz, BB0_9
	ld	de, -10
	ld	(ix - 3), de
	push	de
	pop	bc
	jq	BB0_9
BB0_6:
	ld	hl, (ix - 10)
BB0_9:
	ld	(ix - 31), bc
	ld	de, 2
	push	de
	push	hl
	call	_movePipes
	pop	hl
	pop	hl
	ld	hl, (ix - 25)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_11
	call	_random
	ld	bc, 171
	call	__iremu
	push	hl
	pop	iy
	ld	de, 70
	add	iy, de
	push	iy
	push	hl
	ld	hl, 360
	push	hl
	ld	hl, (ix - 35)
	push	hl
	ld	hl, (ix - 10)
	push	hl
	call	_addPipe
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB0_11:
	ld	hl, (ix - 22)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 35)
	push	hl
	ld	hl, (ix - 10)
	push	hl
	call	z, _cleanPipes
	pop	hl
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (ix - 10)
	push	hl
	call	_drawPipes
	pop	hl
	push	hl
	push	hl
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	hl, (ix - 16)
	ld	bc, 6
	ldir
	call	_drawBird
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	hl, (ix - 13)
	inc	hl
	ld	(ix - 13), hl
	ld	hl, -917504
	push	hl
	call	_atomic_load_32
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	call	__ultof
	ld	hl, -393216
	ld	e, 65
	call	__fmul
	call	__ftol
	push	bc
	call	_usleep
	ld	de, (ix - 13)
	pop	hl
	ld	iy, (ix - 19)
	dec	iy
	ld	hl, (ix - 38)
	ld	(ix - 32), l
	jq	BB0_3
BB0_12:
	call	_gfx_End
	ld	a, (ix - 7)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	(ix - 16), hl
	ld	bc, 8
	ld	iy, (ix - 10)
	ld	(ix - 13), iy
	ld	de, 0
BB0_13:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_18
	ld	hl, 1
	ld	c, e
	call	__ishl
	ld	bc, (ix - 16)
	call	__iand
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_16
	ld	hl, (ix - 13)
	ld	hl, (hl)
	push	hl
	ld	(ix - 19), de
	call	_free
	ld	de, (ix - 19)
	ld	iy, (ix - 10)
	pop	hl
BB0_16:
	inc	de
	lea	hl, iy
	ld	iy, (ix - 13)
	lea	iy, iy + 3
	ld	(ix - 13), iy
	push	hl
	pop	iy
	ld	bc, 8
	jq	BB0_13
BB0_18:
	push	iy
	call	_free
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_step
_step:
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB1_1
	ld	a, 0
	ret
BB1_1:
	ld	a, 1
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_intersect
_intersect:
	ld	hl, -21
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	de, -10
	or	a, a
	sbc	hl, hl
BB2_1:
	ld	bc, 8
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, bc
	jq	z, BB2_7
	ld	hl, (ix - 6)
	ld	iy, (hl)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_6
	ld	hl, (iy)
	ld	(ix - 9), hl
	add	hl, de
	ld	bc, 21
	or	a, a
	sbc	hl, bc
	jq	nc, BB2_6
	ld	hl, (ix + 9)
	ld	de, (hl)
	ld	hl, (iy + 3)
	ld	(ix - 15), de
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (iy + 6)
	ld	(ix - 18), hl
	ld	de, -20
	ld	hl, (ix - 9)
	add	hl, de
	push	hl
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, 100
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__ftol
	push	bc
	pop	de
	ld	hl, (ix - 12)
	push	hl
	pop	iy
	push	hl
	pop	bc
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	(ix - 9), bc
	ld	(ix - 12), a
	or	a, a
	sbc	hl, hl
	ld	(ix - 21), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 9)
	ld	a, (ix - 12)
	call	__fcmp
	jq	m, BB2_7
	ld	hl, (ix - 18)
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	de
	ld	(ix - 9), a
	ld	bc, (ix - 21)
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ex	de, hl
	ld	e, (ix - 9)
	call	__fcmp
	ld	de, -10
	jq	m, BB2_7
BB2_6:
	ld	hl, (ix - 3)
	inc	hl
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	ld	(ix - 6), iy
	jq	BB2_1
BB2_7:
	ld	hl, (ix - 3)
	ld	de, 8
	or	a, a
	sbc	hl, de
	jq	c, BB2_8
	ld	a, 0
	jq	BB2_10
BB2_8:
	ld	a, 1
BB2_10:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_birdGravity
_birdGravity:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (iy + 3)
	inc	de
	ld	(iy + 3), de
	ld	hl, (iy)
	add	hl, de
	ld	(iy), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_flap
_flap:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, -10
	ld	(iy + 3), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_movePipes
_movePipes:
	call	__frameset0
	ld	iy, 0
	ld	de, 24
BB5_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jq	z, BB5_5
	lea	bc, iy
	ld	hl, (ix + 6)
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_4
	push	bc
	pop	de
	push	de
	pop	hl
	ld	hl, (hl)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	lea	bc, iy
	push	de
	pop	iy
	ld	de, 24
	ld	(iy), hl
	push	bc
	pop	iy
BB5_4:
	ld	bc, 3
	add	iy, bc
	jq	BB5_1
BB5_5:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_addPipe
_addPipe:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	hl, (ix + 9)
	ld	bc, 65536
	ld	de, 0
	ld	(ix - 3), de
	ld	iy, 9
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	(ix - 9), hl
	ld	de, 8
	ld	a, 16
BB6_1:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	jq	z, BB6_4
	push	bc
	pop	hl
	ld	bc, (ix - 3)
	call	__ishl
	ld	c, a
	call	__ishrs
	push	hl
	pop	de
	ld	bc, (ix - 9)
	call	__iand
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_3
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	lea	hl, iy
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	ld	(ix - 6), iy
	push	hl
	pop	iy
	ld	bc, 65536
	ld	de, 8
	jq	BB6_1
BB6_3:
	push	iy
	ld	(ix - 3), de
	call	_malloc
	push	hl
	pop	iy
	pop	hl
	ld	hl, (ix + 12)
	ld	(iy), hl
	ld	hl, (ix + 15)
	ld	(iy + 3), hl
	ld	hl, (ix + 18)
	ld	(iy + 6), hl
	ld	hl, (ix - 6)
	ld	(hl), iy
	ld	hl, (ix + 9)
	ld	a, (hl)
	ld	de, (ix - 3)
	or	a, e
	ld	(hl), a
BB6_4:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cleanPipes
_cleanPipes:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 0
BB7_1:
	ld	de, 8
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB7_6
	ld	hl, (ix + 9)
	ld	e, (hl)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	(ix - 3), iy
	push	hl
	pop	iy
	ld	iyl, e
	ld	hl, 1
	ld	(ix - 6), bc
	call	__ishl
	ld	(ix - 9), hl
	lea	bc, iy
	ld	iy, (ix - 3)
	call	__iand
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB7_5
	ld	hl, (iy)
	ld	hl, (hl)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB7_5
	ld	hl, (ix - 9)
	ld	a, l
	cpl
	ld	l, a
	ld	a, e
	and	a, l
	ld	hl, (ix + 9)
	ld	(hl), a
	ld	hl, (iy)
	push	hl
	call	_free
	ld	iy, (ix - 3)
	pop	hl
	ld	hl, 0
	ld	(iy), hl
BB7_5:
	ld	bc, (ix - 6)
	inc	bc
	lea	iy, iy + 3
	jq	BB7_1
BB7_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawPipes
_drawPipes:
	ld	hl, -6
	call	__frameset
	ld	hl, 3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, 24
	ld	iy, 0
	ld	(ix - 3), iy
BB8_1:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jq	z, BB8_5
	ld	de, (ix - 3)
	ld	hl, (ix + 6)
	add	hl, de
	ld	hl, (hl)
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB8_4
	ld	(ix - 6), de
	ld	hl, (ix - 6)
	ld	hl, (hl)
	ld	iy, (ix - 6)
	ld	de, (iy + 3)
	push	de
	ld	de, 0
	push	de
	push	hl
	call	_gfx_VertLine
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 6)
	ld	bc, (iy)
	ld	de, (iy + 6)
	ld	hl, 240
	or	a, a
	sbc	hl, de
	push	hl
	push	de
	push	bc
	call	_gfx_VertLine
	ld	bc, 24
	pop	hl
	pop	hl
	pop	hl
BB8_4:
	ld	de, 3
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	jq	BB8_1
BB8_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawBird
_drawBird:
	call	__frameset0
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix + 6)
	ld	de, 10
	push	de
	push	hl
	ld	hl, 20
	push	hl
	call	_gfx_FillCircle
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_atomic_load_32
	extern	_gfx_Begin
	extern	_usleep
	extern	_kb_Scan
	extern	_sqrt
	extern	__sand
	extern	__ultof
	extern	_gfx_SwapDraw
	extern	__ishl
	extern	__ishrs
	extern	__fmul
	extern	__ftol
	extern	_gfx_SetDraw
	extern	__idivu
	extern	__setflag
	extern	_gfx_FillScreen
	extern	_gfx_VertLine
	extern	__Unwind_SjLj_Unregister
	extern	_srandom
	extern	__iand
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	__ltof
	extern	_gfx_End
	extern	_gfx_FillCircle
	extern	_free
	extern	__frameset0
	extern	__fcmp
